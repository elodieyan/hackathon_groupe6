## Lancer l'analyse :
# activer l'environnement Bioconda :
conda activate 

# installer Singularity version 3.6.3 nécessaire au fonctionnement de Snakemake avec les containers :
conda install singularity=3.6.3

# créer un répertoire pour héberger le repository git en local :
mkdir gitrepository
cd gitrepository
git clone https://github.com/elodieyan/hackathon_groupe6.git

# se placer dans le répertoire mydatalocal pour pouvoir y stocker des fichiers lourds :
cd /home/ubuntu/data/mydatalocal/

# lancer le sra_configurator pour les paramètres de singularity, à faire une fois avant d'appeler tout le pipeline d'analyse :
snakemake --use-singularity -s /home/ubuntu/gitrepository/hackathon_groupe6/Test_hachathon/sraConfigurator 
# il va y avoir une fenêtre bleue avec des options qui s'ouvre, vous faites exit. 
# Une fois que c'est revenu à la normale, lancer le pipeline d'analyse :

snakemake --use-singularity --cores 16 -s /home/ubuntu/gitrepository/hackathon_groupe6/SnakefileGeneral.txt (ou quel que soit le nom qu'on lui donnera. Pour l'instant, c'est v2_SnakefileGeneral.txt

# /!\ Si votre connexion internet peu stable ou perte de session à distance car trop long, lancer la commande précédente en screen en ajoutant devant celle-ci "screen -d -m" /!\
# Pour voir si le screen tourne toujours : "screen -list" --> si il y a encore un screen dans la Socket, c'est qu'il tourne toujours, donc attendre ; sinon, aller regarder si tous les fichiers sont là ou explorer le log de snakemake.

## Obtenir une visualisation des résultats :
input(commandes à lancer pour les fichiers R


## obtenir une visualisation du pipeline :
# Pour un graphe simple :
snakemake -s /home/ubuntu/gitrepository/hackathon_groupe6/v2_SnakefileGeneral --forceall --rulegraph | dot -Tpdf > rulegraph.pdf

# Pour un graphe encore + stylé :
snakemake -s /home/ubuntu/gitrepository/hackathon_groupe6/v2_SnakefileGeneral --forceall --filegraph | dot -Tpdf > filegraph.pdf

#Pour un DAG (illisible) :
snakemake -s /home/ubuntu/gitrepository/hackathon_groupe6/v2_SnakefileGeneral --forceall --dag | dot -Tpdf > dag.pdf

